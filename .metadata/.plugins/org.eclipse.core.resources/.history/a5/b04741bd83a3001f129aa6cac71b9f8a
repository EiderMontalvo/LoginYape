package ui;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.stream.IntStream;

public class Login extends JFrame {
    private static final long serialVersionUID = 1L;
    private static final String PASSWORD = "1234";
    private static final Color PURPLE_BACKGROUND = new Color(97, 32, 123);
    private static final Color BUTTON_BACKGROUND = new Color(237, 235, 243);
    private static final Font ARIAL_BOLD = new Font("Arial", Font.BOLD, 18);
    
    private int intentosRestantes = 3;
    private ArrayList<JLabel> circles = new ArrayList<>();
    private ArrayList<JButton> buttons = new ArrayList<>();
    private StringBuilder currentPassword = new StringBuilder();
    private JPanel keypadPanel;

    public Login() {
        configureFrame();
        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
        mainPanel.setOpaque(false);
        mainPanel.add(createTopPanel());
        mainPanel.add(createBottomPanel());
        add(mainPanel);
        setVisible(true);
    }

    private void configureFrame() {
        setTitle("Yape Login");
        setSize(400, 700);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
        getContentPane().setBackground(PURPLE_BACKGROUND);
    }

    private JPanel createTopPanel() {
        JPanel topPanel = createGradientPanel(true);
        topPanel.setPreferredSize(new Dimension(400, 350));
        topPanel.setLayout(null);
        
        addHelpButton(topPanel);
        addQRLabel(topPanel);
        
        return topPanel;
    }

    private void addHelpButton(JPanel panel) {
        JButton helpButton = createCustomButton("Ayuda", new Color(140, 51, 168));
        configureHelpButton(helpButton);
        panel.add(helpButton);
    }

    private void configureHelpButton(JButton button) {
        button.setBounds(280, 10, 80, 30);
        button.setFont(new Font("Arial", Font.BOLD, 12));
        button.setForeground(Color.WHITE);
        
        ImageIcon helpIcon = new ImageIcon("src/ui/img/help_icon.png");
        Image scaledIcon = helpIcon.getImage().getScaledInstance(15, 15, Image.SCALE_SMOOTH);
        button.setIcon(new ImageIcon(scaledIcon));
        button.setIconTextGap(5);
        button.setHorizontalTextPosition(SwingConstants.RIGHT);
        button.setVerticalTextPosition(SwingConstants.CENTER);
        
        button.addActionListener(e -> JOptionPane.showMessageDialog(this, "Por favor, contacta al soporte para ayuda."));
    }

    private void addQRLabel(JPanel panel) {
        ImageIcon qrIcon = new ImageIcon("src/ui/img/QrEider.jpg");
        Image scaledImage = qrIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
        
        JLabel qrLabel = new JLabel() {
            @Override
            protected void paintComponent(Graphics g) {
                if (g instanceof Graphics2D) {
                    Graphics2D g2 = (Graphics2D) g;
                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                    g2.setClip(new java.awt.geom.RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 15, 15));
                    g2.drawImage(scaledImage, 0, 0, getWidth(), getHeight(), this);
                }
            }
        };
        
        qrLabel.setBounds(125, 50, 150, 150);
        panel.add(qrLabel);
    }

    private JPanel createBottomPanel() {
        JPanel bottomPanel = createGradientPanel(false);
        bottomPanel.setLayout(new BoxLayout(bottomPanel, BoxLayout.Y_AXIS));
        bottomPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        
        addPasswordComponents(bottomPanel);
        
        return bottomPanel;
    }

    private void addPasswordComponents(JPanel panel) {
        JLabel titleLabel = new JLabel("Ingresa tu clave", SwingConstants.CENTER);
        titleLabel.setForeground(new Color(114, 24, 138));
        titleLabel.setFont(ARIAL_BOLD);
        titleLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        
        panel.add(titleLabel);
        panel.add(Box.createVerticalStrut(10));
        panel.add(createCirclesPanel());
        panel.add(Box.createVerticalStrut(20));
        
        keypadPanel = new JPanel(new GridLayout(4, 3, 10, 10));
        keypadPanel.setBackground(Color.WHITE);
        generateRandomKeypad();
        panel.add(keypadPanel);
        
        addForgotPasswordLabel(panel);
    }

    private JPanel createCirclesPanel() {
        JPanel circlesPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 0));
        circlesPanel.setBackground(Color.WHITE);
        
        IntStream.range(0, 4).forEach(i -> {
            JLabel circle = new JLabel("○", SwingConstants.CENTER);
            circle.setFont(ARIAL_BOLD);
            circle.setForeground(Color.LIGHT_GRAY);
            circles.add(circle);
            circlesPanel.add(circle);
        });
        
        return circlesPanel;
    }

    // ... [Resto de los métodos permanecen igual]

    private JPanel createGradientPanel(boolean isTop) {
        return new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                if (g instanceof Graphics2D) {
                    Graphics2D g2 = (Graphics2D) g;
                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                    
                    Color[] colors = isTop ? 
                        new Color[]{new Color(140, 61, 153), new Color(112, 34, 129), new Color(75, 25, 113)} :
                        new Color[]{new Color(75, 25, 113), new Color(75, 25, 113)};
                    
                    float[] fractions = isTop ? new float[]{0.0f, 0.5f, 1.0f} : new float[]{0.0f, 1.0f};
                    
                    g2.setPaint(new LinearGradientPaint(0, 0, 0, getHeight() + (isTop ? 10 : 0), fractions, colors));
                    g2.fillRect(0, 0, getWidth(), getHeight());
                    
                    if (!isTop) {
                        g2.setColor(Color.WHITE);
                        g2.fillRoundRect(0, 10, getWidth(), getHeight(), 30, 25);
                    }
                }
            }
        };
    }

    private JButton createCustomButton(String text, Color backgroundColor) {
        JButton button = new JButton(text) {
            @Override
            protected void paintComponent(Graphics g) {
                if (g instanceof Graphics2D) {
                    Graphics2D g2 = (Graphics2D) g;
                    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                    g2.setColor(backgroundColor);
                    g2.fillRoundRect(0, 0, getWidth(), getHeight(), 20, 20);
                }
                super.paintComponent(g);
            }
        };
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        button.setContentAreaFilled(false);
        return button;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(Login::new);
    }
}